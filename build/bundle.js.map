{"version":3,"file":"bundle.js","sources":["../src/ServiceWorkerProvider.js","../src/Message.js","../src/UpdatePrompt.js"],"sourcesContent":["// ✂️ code from: https://github.com/facebook/create-react-app/issues/5316#issuecomment-496292914\n\nimport React, { useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ServiceWorkerContext = React.createContext();\n\nexport function ServiceWorkerProvider(props) {\n  const [waiting, setServiceWorker] = useState(null);\n  const [assetsUpdateReady, setAssetsUpdateReady] = useState(false);\n  const [assetsCached, setAssetsCached] = useState(false);\n\n  const value = useMemo(\n    () => ({\n      assetsUpdateReady,\n      assetsCached,\n      // Call when the user confirm update of application and reload page\n      updateAssets: () => {\n        if (waiting) {\n          waiting.addEventListener(\"statechange\", () => {\n            if (waiting.state === \"activated\") {\n              window.location.reload();\n            }\n          });\n\n          waiting.postMessage({ type: \"SKIP_WAITING\" });\n        }\n      }\n    }),\n    [assetsCached, assetsUpdateReady, waiting]\n  );\n\n  // Once on component mounted subscribe to Update and Succes events in\n  // CRA's service worker wrapper\n  React.useEffect(() => {\n    props.register({\n      onRegister: registration => {\n        setServiceWorker(registration.waiting);\n        setAssetsUpdateReady(!!registration.waiting);\n      },\n      onUpdate: registration => {\n        setServiceWorker(registration.waiting);\n        setAssetsUpdateReady(true);\n      },\n      onSuccess: () => {\n        setAssetsCached(true);\n      }\n    });\n  }, []);\n\n  return <ServiceWorkerContext.Provider value={value} {...props} />;\n}\nServiceWorkerProvider.propTypes = {\n  register: PropTypes.func.isRequired\n};\n\nexport function useServiceWorker() {\n  const context = React.useContext(ServiceWorkerContext);\n\n  if (!context) {\n    throw new Error(\n      \"useServiceWorker must be used within a ServiceWorkerProvider\"\n    );\n  }\n\n  return context;\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst buttonCommon = {\n  display: \"flex\",\n  border: \"none\",\n  cursor: \"pointer\",\n  outline: \"inherit\",\n  height: \"2rem\",\n  padding: \"0 1rem\",\n  borderRadius: \"3px\"\n};\nconst styles = {\n  prompt: {\n    display: \"flex\",\n    position: \"absolute\",\n    bottom: \"3rem\",\n    right: \"9rem\",\n    backgroundColor: \"hsl(209, 61%, 16%)\",\n    zIndex: 1,\n    color: \"white\",\n    padding: \"0 1rem 0 2rem\",\n    borderRadius: \"3px\",\n    alignItems: \"center\"\n  },\n  hidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: 0,\n    overflow: \"hidden\",\n    position: \"absolute\"\n  },\n  loading: {\n    display: \"inline\",\n    marginLeft: \".5rem\"\n  },\n  button: {\n    background: \"hsl(209, 34%, 30%)\",\n    color: \"hsl(212, 33%, 89%)\",\n    ...buttonCommon,\n    textTransform: \"uppercase\",\n    marginLeft: \"2rem\",\n    fontWeight: \"bold\",\n    \"&:hover\": {\n      background: \"hsl(209, 28%, 39%)\"\n    }\n  },\n  dismiss: {\n    ...buttonCommon,\n    background: \"none\",\n    marginLeft: \"1rem\",\n    color: \"hsl(212, 33%, 89%)\"\n  }\n};\n\nexport function Message(props) {\n  return (\n    <div\n        className={props.className}\n        style={props.visible ? styles.prompt : styles.hidden}\n      >\n        <p>{props.message}</p>\n        <button\n          style={styles.button}\n          type=\"button\"\n          onClick={props.onClick}\n        >\n          {props.buttonText}\n          {/* {loading && (\n            <Icon className={styles.loading} size=\"SMALL\" svg={Loading} />\n          )} */}\n        </button>\n        <button style={styles.dismiss} type=\"button\" onClick={props.onDismiss}>\n          {/* <ClearIcon\n            height=\"1rem\"\n            width=\"1rem\"\n            fill=\"hsla(255, 100%, 100%, 0.3)\"\n          /> */}\n          X\n        </button>\n      </div>\n  );\n}\nMessage.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onDismiss: PropTypes.func,\n  visible: PropTypes.bool\n}","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useServiceWorker } from \"./ServiceWorkerProvider\";\nimport { Message } from \"./Message\";\n// import Icon from \"./components/common/Icon\";\n// import Loading from \"./assets/svg/loading.svg\";\n// import ClearIcon from \"./assets/svg/Clear\";\n\nexport function UpdatePrompt(props) {\n  const { updateAssets, assetsUpdateReady } = useServiceWorker();\n  const [loading, setLoading] = useState(false);\n  const [visible, setVisible] = useState(true);\n\n  const handleClick = () => {\n    setLoading(true);\n    updateAssets();\n  };\n\n  const dismiss = () => setVisible(false);\n\n  return (\n    visible && (\n      <Message \n        {...props}\n        onClick={handleClick}\n        onDismiss={dismiss}\n        visible={assetsUpdateReady}\n      />\n    )\n  );\n}\n\nUpdatePrompt.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  buttonText: PropTypes.string.isRequired\n};\n\n"],"names":["ServiceWorkerContext","React","createContext","ServiceWorkerProvider","props","useState","waiting","setServiceWorker","assetsUpdateReady","setAssetsUpdateReady","assetsCached","setAssetsCached","value","useMemo","updateAssets","addEventListener","state","window","location","reload","postMessage","type","useEffect","register","onRegister","registration","onUpdate","onSuccess","Provider","useServiceWorker","context","useContext","Error","propTypes","PropTypes","func","isRequired","buttonCommon","display","border","cursor","outline","height","padding","borderRadius","styles","prompt","position","bottom","right","backgroundColor","zIndex","color","alignItems","hidden","clip","width","margin","overflow","loading","marginLeft","button","background","textTransform","fontWeight","dismiss","Message","className","style","visible","message","onClick","buttonText","onDismiss","UpdatePrompt","setLoading","setVisible","string","bool"],"mappings":"ytDAKA,IAAMA,EAAuBC,EAAMC,gBAE5B,SAASC,EAAsBC,WACAC,WAAS,SAAtCC,OAASC,WACkCF,YAAS,MAApDG,OAAmBC,WACcJ,YAAS,MAA1CK,OAAcC,OAEfC,EAAQC,UACZ,iBAAO,CACLL,kBAAAA,EACAE,aAAAA,EAEAI,aAAc,WACRR,IACFA,EAAQS,iBAAiB,cAAe,WAChB,cAAlBT,EAAQU,OACVC,OAAOC,SAASC,WAIpBb,EAAQc,YAAY,CAAEC,KAAM,qBAIlC,CAACX,EAAcF,EAAmBF,WAKpCL,EAAMqB,UAAU,WACdlB,EAAMmB,SAAS,CACbC,WAAY,SAAAC,GACVlB,EAAiBkB,EAAanB,SAC9BG,IAAuBgB,EAAanB,UAEtCoB,SAAU,SAAAD,GACRlB,EAAiBkB,EAAanB,SAC9BG,GAAqB,IAEvBkB,UAAW,WACThB,GAAgB,OAGnB,IAEIV,gBAACD,EAAqB4B,YAAShB,MAAOA,GAAWR,IAMnD,SAASyB,QACRC,EAAU7B,EAAM8B,WAAW/B,OAE5B8B,QACG,IAAIE,MACR,uEAIGF,EAbT3B,EAAsB8B,UAAY,CAChCV,SAAUW,EAAUC,KAAKC,gBClDrBC,EAAe,CACnBC,QAAS,OACTC,OAAQ,OACRC,OAAQ,UACRC,QAAS,UACTC,OAAQ,OACRC,QAAS,SACTC,aAAc,OAEVC,EAAS,CACbC,OAAQ,CACNR,QAAS,OACTS,SAAU,WACVC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,qBACjBC,OAAQ,EACRC,MAAO,QACPT,QAAS,gBACTC,aAAc,MACdS,WAAY,UAEdC,OAAQ,CACNf,OAAQ,EACRgB,KAAM,gBACNb,OAAQ,MACRc,MAAO,MACPC,OAAQ,OACRd,QAAS,EACTe,SAAU,SACVX,SAAU,YAEZY,QAAS,CACPrB,QAAS,SACTsB,WAAY,SAEdC,UACEC,WAAY,qBACZV,MAAO,sBACJf,GACH0B,cAAe,YACfH,WAAY,OACZI,WAAY,iBACD,CACTF,WAAY,wBAGhBG,aACK5B,GACHyB,WAAY,OACZF,WAAY,OACZR,MAAO,wBAIJ,SAASc,EAAQ9D,UAEpBH,uBACIkE,UAAW/D,EAAM+D,UACjBC,MAAOhE,EAAMiE,QAAUxB,EAAOC,OAASD,EAAOS,QAE9CrD,yBAAIG,EAAMkE,SACVrE,0BACEmE,MAAOvB,EAAOgB,OACdxC,KAAK,SACLkD,QAASnE,EAAMmE,SAEdnE,EAAMoE,YAKTvE,0BAAQmE,MAAOvB,EAAOoB,QAAS5C,KAAK,SAASkD,QAASnE,EAAMqE,iBCnE7D,SAASC,EAAatE,SACiByB,IAApCf,IAAAA,aAAcN,IAAAA,sBACQH,YAAS,MAAvBsE,kBACctE,YAAS,MAAhCgE,OAASO,cAUdP,GACEpE,gBAACiE,OACK9D,GACJmE,QAXc,WAClBI,GAAW,GACX7D,KAUI2D,UAPU,kBAAMG,GAAW,IAQ3BP,QAAS7D,KD4DjB0D,EAAQjC,UAAY,CAClBkC,UAAWjC,EAAU2C,OACrBP,QAASpC,EAAU2C,OAAOzC,WAC1BoC,WAAYtC,EAAU2C,OAAOzC,WAC7BmC,QAASrC,EAAUC,KAAKC,WACxBqC,UAAWvC,EAAUC,KACrBkC,QAASnC,EAAU4C,MC5DrBJ,EAAazC,UAAY,CACvBkC,UAAWjC,EAAU2C,OACrBP,QAASpC,EAAU2C,OAAOzC,WAC1BoC,WAAYtC,EAAU2C,OAAOzC"}